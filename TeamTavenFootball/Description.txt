--------REQUIREMENTS----------
At least 5 interfaces (with one or more implementations) Ready
At least 15 classes (implementing the application logic): 7 Classes ready
At least 3 abstract classes (with inheritors):   Ready
At least 1 custom exception class (with usage in your code): Not yet
At least 3 levels of depth in inheritance: Ready
At least 1 polymorphism usage: Ready
At least 1 structure: Ready
At least 1 enumeration: Ready
At least 1 event (with subscribers): Ready 
At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, etc.): Ready



Classes:
GameObject : Its abstract class Everything in the game is GameObject
	1 There is property called Name
	2 There is property Position which is new structure Vector2D
	3 There is Active when true the game object is active when false it is not

Player : It is class that creates players on the game
	Player is inherit of GameObject
	Player has property Speed
	Player has Color property
	Player has Vector2 Size property
	Player has constructor taking parameters vector2 position, int speed, color
		

InputController : Its static class that checks for inputs
		It has 4 properties
		If Up Arrow is pressed then Player1Up property will be true
		If Down Arrow is pressed then Player1Down property will be true
		If W is pressed then Player Player2Up property will be true
		If S is pressed then Player Player2Down property will be true
		There is 8 static void methods
		First is UpArrowKeyDown which has arguments (object sender, KeyEventArgs e)
		Second is DownArrowKeyDown which has arguments (object sender, KeyEventArgs e)
		Third is WKeyDown which has arguments (object sender, KeyEventArgs e)
		Fourth is SKeyDown which has arguments (object sender, KeyEventArgs e)
		Fifth is UpArrowKeyUP which has arguments (object sender, KeyEventArgs e)
		Sixth is DownArrowKeyUP which has arguments (object sender, KeyEventArgs e)
		Seventh is WKeyUP which has arguments (object sender, KeyEventArgs e)
		Eighth is SKeyUP which has arguments (object sender, KeyEventArgs e)

UserInteface : It should have Color and it inherits GameObject

FootballButton : It should have string Text and it inherits UserInteface and it has Vector2 Size property

Ball : It should have property int Radius
      	

RadioButton it should have property bool isOn
	    it should have property string Text
	    

Structures:
Vector2D
	Vector 2D have 3 properties X and Y and PointZero 
				X is int
				Y is int
				PointZero is static Vector2D with coordinates x: 0, y: 0
				Implement operators for +, -, *, /, == and !=


Interfaces:
IGameObject : It requires implementation of all properties in the GameObject
IMovable : It gives a method called Move(Vector2D positionToGoTo) will move GameObject vector to the vector in the method
IShape : it requires property Shape
IName it requires property Name
IColor it requires property Color

Enumarations:
Color: It has colors like Red, Blue, etc
Shape: It has circle, rectangle etc